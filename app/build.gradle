plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.antisoch'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.antisoch"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Avoid resource conflicts
        resConfigs "en"

        // Use support library for vector drawables
        vectorDrawables.useSupportLibrary = true

        // Load API key from local.properties
        def localPropertiesFile = rootProject.file("local.properties")
        def properties = new Properties()
        if (localPropertiesFile.exists()) {
            properties.load(localPropertiesFile.newDataInputStream())
            buildConfigField "String", "GEMINI_API_KEY", "\"${properties.getProperty('gemini.api.key', '')}\""
        } else {
            buildConfigField "String", "GEMINI_API_KEY", "\"\""
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    lint {
        abortOnError false
        baseline file("lint-baseline.xml")
    }

    aaptOptions {
        cruncherEnabled = false
        noCompress "webp"
    }

    packagingOptions {
        resources {
            excludes += [
                    '/META-INF/DEPENDENCIES',
                    '/META-INF/LICENSE',
                    '/META-INF/LICENSE.txt',
                    '/META-INF/license.txt',
                    '/META-INF/NOTICE',
                    '/META-INF/NOTICE.txt',
                    '/META-INF/notice.txt',
                    '/META-INF/ASL2.0',
                    '/META-INF/*.kotlin_module'
            ]
        }
    }

    buildFeatures {
        buildConfig true
    }
}

dependencies {
    // Firebase
    implementation 'com.google.firebase:firebase-auth:22.3.0'
    implementation 'com.google.firebase:firebase-analytics:21.5.0'

    // Kotlin standard (used in chatbot project)
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.20')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.20"

    // Android core + UI
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Navigation components
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'

    // Retrofit + GSON
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    implementation 'com.google.code.gson:gson:2.10'

    // Room Database
    implementation 'androidx.room:room-runtime:2.5.2'
    annotationProcessor 'androidx.room:room-compiler:2.5.2'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
